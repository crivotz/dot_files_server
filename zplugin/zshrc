#####################
# FIRST PROMPT LINE #
#####################
rosso='\e[1;34m'
NC='\e[0m'
echo -e "${rosso}Debian${NC}" `cat /etc/debian_version` "| ${rosso}ZSH${NC} ${ZSH_VERSION}"

#####################
# ZPLUGIN INSTALLER #
#####################
if [[ ! -d ${HOME}/.zplugin ]]; then
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/zdharma/zplugin/master/doc/install.sh)"
fi

#####################
# ZPLUGIN           #
#####################
source "$HOME/.zplugin/bin/zplugin.zsh"
autoload -Uz _zplugin
(( ${+_comps}  )) && _comps[zplugin]=_zplugin

#####################
# THEME             #
#####################
zplugin ice depth=1; zplugin light romkatv/powerlevel10k

#####################
# PLUGINS           #
#####################
# GIT-OPEN URL
zplugin light paulirish/git-open
# SSH-AGENT
zplugin light bobsoppe/zsh-ssh-agent
# AUTOSUGGESTIONS, TRIGGER PRECMD HOOK UPON LOAD
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
zplugin ice wait"0a" lucid atload"_zsh_autosuggest_start"
zplugin light zsh-users/zsh-autosuggestions
# ENHANCD
zplugin ice wait"0b" lucid
zplugin light b4b4r07/enhancd
export ENHANCD_FILTER=fzf:fzy:peco
# HISTORY SUBSTRING SEARCHING
zplugin ice wait"0b" lucid atload'bindkey "$terminfo[kcuu1]" history-substring-search-up; bindkey "$terminfo[kcud1]" history-substring-search-down'
zplugin light zsh-users/zsh-history-substring-search
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down
# TAB COMPLETIONS
zplugin ice wait"0b" lucid blockf
zplugin light zsh-users/zsh-completions
zstyle ':completion:*' completer _expand _complete _ignored _approximate
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*' menu select=2
zstyle ':completion:*' select-prompt '%SScrolling active: current selection at %p%s'
zstyle ':completion:*:descriptions' format '%U%F{yellow}%d%f%u'
zstyle ':completion:*:processes' command 'ps -au$USER'
# FZF
zplugin ice lucid wait'0b' from"gh-r" as"program"
zplugin light junegunn/fzf-bin
# FZF BYNARY AND TMUX HELPER SCRIPT
zplugin ice lucid wait'0c' as"command" pick"bin/fzf-tmux"
zplugin light junegunn/fzf
# BIND MULTIPLE WIDGETS USING FZF
zplugin ice lucid wait'0c' multisrc"shell/{completion,key-bindings}.zsh" id-as"junegunn/fzf_completions" pick"/dev/null"
zplugin light junegunn/fzf
# SYNTAX HIGHLIGHTING
zplugin ice wait"0c" lucid atinit"zpcompinit;zpcdreplay"
zplugin light zdharma/fast-syntax-highlighting
# NVM
zplugin ice wait"1" lucid
zplugin light lukechilds/zsh-nvm
export NVM_AUTO_USE=true
# EXA
zplugin ice wait"2" lucid from"gh-r" as"program" mv"exa* -> exa"
zplugin light ogham/exa
zplugin ice wait blockf atpull'zplugin creinstall -q .'
# ZSH DIFF SO FANCY
zplugin ice wait"2" lucid as"program" pick"bin/git-dsf"
zplugin light zdharma/zsh-diff-so-fancy
# BAT
zplugin ice from"gh-r" as"program" mv"bat* -> bat" pick"bat/bat"
zplugin light sharkdp/bat
# RIPGREP
zplugin ice from"gh-r" as"program" mv"ripgrep* -> ripgrep" pick"ripgrep/rg"
zplugin light BurntSushi/ripgrep
# NEOVIM
zplugin ice from"gh-r" as"program" bpick"*appimage*" mv"nvim* -> nvim" pick"nvim"
zplugin light neovim/neovim
# FORGIT
zplugin ice wait lucid
zplugin load 'wfxr/forgit'
# RANGER
zplugin ice depth'1' as"program" pick"ranger.py"
zplugin light ranger/ranger
# FD
zplugin ice as"command" from"gh-r" mv"fd* -> fd" pick"fd/fd"
zplugin light sharkdp/fd


#####################
# HISTORY           #
#####################
[ -z "$HISTFILE" ] && HISTFILE="$HOME/.zhistory"
HISTSIZE=290000
SAVEHIST=$HISTSIZE

#####################
# SETOPT            #
#####################
setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_all_dups   # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt inc_append_history     # add commands to HISTFILE in order of execution
setopt share_history          # share command history data
setopt always_to_end          # cursor moved to the end in full completion
setopt hash_list_all          # hash everything before completion
setopt completealiases        # complete alisases
setopt always_to_end          # when completing from the middle of a word, move the cursor to the end of the word
setopt complete_in_word       # allow completion from within a word/phrase
setopt nocorrect                # spelling correction for commands
setopt list_ambiguous         # complete as much of a completion until it gets ambiguous.
setopt nolisttypes
setopt listpacked
setopt automenu
setopt vi

#####################
# ENV VARIABLE      #
#####################
export EDITOR='nvim'
export VISUAL=$EDITOR
export PAGER='less'
export SHELL='/bin/zsh'
export LANG='it_IT.UTF-8'
export LC_ALL='it_IT.UTF-8'

#####################
# COLORING          #
#####################
autoload colors && colors

#####################
# ALIASES           #
#####################
source $HOME/.zsh_aliases

#####################
# FZF SETTINGS      #
#####################
export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow -g "!{.git,node_modules}/*" 2> /dev/null'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_CTRL_T_OPTS='--preview="cat {}" --preview-window=right:60%:wrap'
export FZF_ALT_C_OPTS='--preview="ls {}" --preview-window=right:60%:wrap'
export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'
--height=50%
--color=fg:#e5e9f0,bg:#2e3440,hl:#81a1c1
--color=fg+:#e5e9f0,bg+:#2e3440,hl+:#81a1c1
--color=info:#eacb8a,prompt:#bf6069,pointer:#b48dac
--color=marker:#a3be8b,spinner:#b48dac,header:#a3be8b'

#####################
# GO SETTINGS       #
#####################
export PATH=$PATH:/usr/local/go/bin
export GOPATH=$HOME/Dev/go

#####################
# FLUTTER SETTINGS  #
#####################
export PATH="$PATH:$HOME/Dev/flutter/bin"

#####################
# P10K SETTINGS     #
#####################
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh

#####################
# RVM VARIABLE      #
#####################
export PATH="$PATH:$HOME/.rvm/bin"
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
